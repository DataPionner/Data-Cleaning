# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LWZsgtrHiEGe7dr-j9XPkGFi7wSXvsWS
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df= pd.read_csv('Book1.csv')
#df

df = df.rename(columns={'NO': 'Notout'})
df

df.head()

df.tail()

df= df.rename(columns={'Span':'Playing Span','Mat':'Matches','Inns':'Innings','HS':'Highest Score','Ave':'Average','BF':'Balls Faced','SR':'Striking Rate'})
df.head()

df.isnull().any()

df[df['Balls Faced'].isna()==1]

df[df['Striking Rate'].isna()==1]

df['Balls Faced'] = df['Balls Faced'].fillna(0)
df['Striking Rate'] = df['Striking Rate'].fillna(0)

df[df['Player']=='ED Weekes (WI)']

df[df['Player']=='CL Walcott (WI)']

df.duplicated()
df.head(68)

df[df['Player'].duplicated()==1]

df[df['Player'].isin(['GA Headley (WI)','WR Hammond (ENG)','JB Hobbs (ENG)','DPMD Jayawardene (SL)'])]

df.drop_duplicates()

df=df.drop_duplicates()

df[df['Player'].isin(['GA Headley (WI)','WR Hammond (ENG)','JB Hobbs (ENG)','DPMD Jayawardene (SL)'])]

df['Playing Span']

df['Playing Span'].str.split(pat = '-')

df['Playing Span'].str.split(pat = '-').str[1]

df['Playing Span'].str.split(pat = '-').str[0]

df['Rookie_Year']=df['Playing Span'].str.split(pat='-').str[0]

df['Final_Year']=df['Playing Span'].str.split(pat='-').str[1]

df

df.drop(['Playing Span'], axis=1)

df.head()

df['Player'].str.split(pat='(')

df['Country']=df['Player'].str.split(pat='(').str[1]

df['Country']

df['Country']=df['Country'].str.split(pat='(').str[0]

df['Player']=df['Player'].str.split(pat='(').str[0]

df.head()

df.dtypes

df['Highest Score'].str.split(pat= '*')

df['Highest Score'].str.split(pat= '*').str[0]

df['Highest Score']=df['Highest Score'].str.split(pat= '*').str[0]

df['Highest Score']

df['Highest Score'].astype('int')

df['Highest Score']=df['Highest Score'].astype('int')

df.dtypes

df = df.astype({'Rookie_Year': 'int', 'Final_Year': 'int'})

df.dtypes

df.head()

df['Striking Rate']=df['Striking Rate'].astype('float')

df.dtypes

df['Matches']=df['Matches'].str.split(pat= '*').str[0]

df['Matches']=df['Matches'].astype('int')

df.dtypes

df['Balls Faced']=df['Balls Faced'].str.split(pat= '*').str[0]

df.isnull().any()

df[df['Balls Faced'].isna()==1]

df['Balls Faced']=df['Balls Faced'].fillna(0)

df[df['Balls Faced'].isna()==1]

df['Balls Faced']=df['Balls Faced'].astype('int')

pd.set_option('display.max_rows',None)

df

df.drop(56,axis =0)

df

df.isnull().any()

df.dtypes

df['Striking Rate']=df['Striking Rate'].astype('float')

df.dtypes

df['Career_length']=df['Final_Year']-df['Rookie_Year']

df

df['Career_length'].mean()

df[df['Career_length']>10]['Striking Rate'].mean()

df[df['Rookie_Year']<1960]

df[df['Rookie_Year']<1960]['Player'].count()

df.groupby('Country')['Highest Score'].max()

df.groupby('Country')['Highest Score'].max().to_frame('HighinnCountry').reset_index().sort_values('HighinnCountry')

df.groupby('Country')['Highest Score'].max().to_frame('HighinnCountry').reset_index().sort_values('HighinnCountry',ascending = False)

df.groupby('Country')['100','50','0'].mean()

sns.distplot(df['Striking Rate'])

sns.boxplot(df['Striking Rate'])

upper_limit=df['Striking Rate'].mean()+3*df['Striking Rate'].std()

upper_limit=df['Striking Rate'].mean()+3*df['Striking Rate'].std()
lower_limit=df['Striking Rate'].mean()-3*df['Striking Rate'].std()
print('upper limit:',upper_limit)
print('lower limit:',lower_limit)

#Finding Outliers
df.loc[(df['Striking Rate']>upper_limit)| (df['Striking Rate']<lower_limit)]

#Trimming the data i.e delete the outliers
new_df = df.loc[(df['Striking Rate'] < upper_limit) & (df['Striking Rate'] > lower_limit)]
print('old data:', len(df))
print('new data:', len(new_df))
print('Outliers:',len(df)-len(new_df))

sns.boxplot(new_df['Striking Rate'])

#Capping i.e Changing the outlier values to upper (or) lower limit values
new_df=df.copy()
new_df.loc[new_df['Striking Rate']>upper_limit,'Striking Rate']=upper_limit
new_df.loc[new_df['Striking Rate']<lower_limit,'Striking Rate']=lower_limit

sns.boxplot(new_df['Striking Rate'])

len(new_df)

q1=df['Striking Rate'].quantile(0.45)
q3=df['Striking Rate'].quantile(0.50)
iqr=q3-q1

q1,q3,iqr

upper_limit=q3+(1.5*iqr)
lower_limit=q1- (1.5*iqr)

lower_limit,upper_limit

sns.boxplot(new_df['Striking Rate'])

df.loc[(df['Striking Rate']>upper_limit)| (df['Striking Rate']<lower_limit)]

new_df = df.loc[(df['Striking Rate'] < upper_limit) & (df['Striking Rate'] > lower_limit)]
print('old data:', len(df))
print('new data:', len(new_df))
print('Outliers:',len(df)-len(new_df))

sns.boxplot(new_df['Striking Rate'])

new_df=df.copy()
new_df.loc[new_df['Striking Rate']>upper_limit,'Striking Rate']=upper_limit
new_df.loc[new_df['Striking Rate']<lower_limit,'Striking Rate']=lower_limit

sns.boxplot(new_df['Striking Rate'])

upper_limit=df['Striking Rate'].quantile(0.90)
lower_limit=df['Striking Rate'].quantile(0.15)
print('upper limit:',upper_limit)
print('lower limit:',lower_limit)

sns.boxplot(df['Striking Rate'])

df.loc[(df['Striking Rate']>upper_limit)| (df['Striking Rate']<lower_limit)]

new_df = df.loc[(df['Striking Rate'] <= upper_limit) & (df['Striking Rate'] >= lower_limit)]
print('old data:', len(df))
print('new data:', len(new_df))
print('Outliers:',len(df)-len(new_df))

sns.boxplot(new_df['Striking Rate'])

new_df=df.copy()
new_df.loc[new_df['Striking Rate']>upper_limit,'Striking Rate']=upper_limit
new_df.loc[new_df['Striking Rate']<lower_limit,'Striking Rate']=lower_limit

sns.boxplot(new_df['Striking Rate'])

df['Striking Rate'].max()

df['Striking Rate'].min()

df['Striking Rate'].describe()

df['Striking Rate'].mean()

df['Striking Rate'].std()